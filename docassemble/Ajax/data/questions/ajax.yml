metadata:
  title: Ajax Combobox
  short: Ajax
  documentation: "https://docassemble.org/docs/fields.html#ajax"
  example start: 1
  example end: 2
---
mandatory: True
code: |
  pass
---
question: |
  What is your favorite word?
fields:
  - Word: favorite_word
    input type: ajax
    action: wordlist
---
## This has a dropdown bug
#event: wordlist
#code: |
#  set_save_status('ignore')
#  wordstart = action_argument('wordstart').lower()
#  results = list()
#  import codecs
#  with codecs.open('/usr/share/dict/words', mode='rU', encoding='utf-8') as words_file:
#    for line in words_file:
#      lower_line = line.lower()
#      if lower_line.startswith(wordstart):
#        results.append(line.rstrip())
#  json_response(results)
#---
#mandatory: True
#question: |
#  Your favorite word is ${ favorite_word }.
#---
question: |
  What is your favorite fruit?
fields:
  - Word: favorite_fruit
    input type: ajax
    action: fruitlist
---
event: fruitlist
code: |
  set_save_status('ignore')
  wordstart = action_argument('wordstart').lower()
  results = list()
  #import codecs
  #with codecs.open('/usr/share/dict/words', mode='rU', encoding='utf-8') as words_file:
  #  for line in words_file:
  #    lower_line = line.lower()
  #    if lower_line.startswith(wordstart):
  #      results.append(line.rstrip())
  #json_response(results)

  #results = list()
  #import codecs
  #with codecs.open('/usr/share/dict/words', mode='rU', encoding='utf-8') as words_file:
  #  for line in words_file:
  #    lower_line = line.lower()
  #    if lower_line.startswith(wordstart):
  #      results.append(line.rstrip())

  ## Does not create the dropdown problem. Just the disappearing problem.
  #results = []
  #for val in ['Apple', 'Apples', 'Orange', 'Peach']:
  #  lower_val = val.lower()
  #  if lower_val.startswith(wordstart):
  #    results.append(val)
  
  ## Just the disappearing problem
  #results = []
  #import codecs
  #options = []
  #with codecs.open('/usr/share/dict/words', mode='rU', encoding='utf-8') as words_file:
  #  for line in words_file:
  #    options.append(line)
  #for line in options:
  #  lower_line = line.lower()
  #  if lower_line.startswith(wordstart):
  #    results.append(line.rstrip())
  
  # This does not have the dropdown bug, even with 2 matching values
  original = action_argument('wordstart')
  results = []
  # No: How about 2 matching values? (but maybe a bug of the choice text disappearing even when valid)
  for key, val in {'x234': 'Apple', 'z1': 'Apples', 'y432': 'Orange', 'h293': 'Peach'}.items():
    if key == original:
      json_response([[key, val]])
    if val.lower().startswith(wordstart):
      results.append([key, val])
  json_response(results)
---
mandatory: True
question: |
  Your favorite word is ${ favorite_fruit }.